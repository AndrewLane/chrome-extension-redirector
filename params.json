{"name":"Chrome-extension-redirector","tagline":"","body":"Redirector for Chrome\r\n=====================\r\n\r\nThis simple extension allows you to redirect urls using the power of regular\r\nexpressions. To add a redirect, go to chrome://extensions, and click on\r\n\"Options\" next to the Redirector extension. From the options page you can\r\nadd new redirects, and view/delete existing ones.\r\n\r\nFor example, you can have all mobile Wikipedia urls to open in desktop mode\r\n(this is convered in the tutorial below).\r\n\r\nYou could also redirect to non-browser schemes to launch external apps. For\r\nexample,If you want youtube links to open in a desktop video app (such as\r\nminitube), you can redirect all youtube urls with a \"youtube:\" prefix, and then\r\nset up a scheme handler on your OS to pass youtube: urls to your player.\r\n\r\n---\r\n\r\n### Tutorial ###\r\n\r\nSometimes people send you links to the mobile version of a website.\r\nYou're on your desktop, and you'd rather see the desktop version.\r\nFor example, a mobile Wikipedia url looks like this:\r\n\r\n    http://en.m.wikipedia.org/wiki/Regular_expression\r\n\r\nTo set up a redirect for mobile Wikipedia urls, enter the following:\r\n\r\n    From: ^http://(.*?)\\.m\\.wikipedia\\.org/(.*)\r\n    To: http://$1.wikipedia.org/$2\r\n\r\nHere's a breakdown of the FROM pattern if you're not familiar with regular\r\nexpressions. When we say \"matches\", that means the redirect will only trigger if\r\na match occurs.\r\n\r\n| Regex              | Effect                                       \r\n| -----------------  | ------------------------------------------------------- |\r\n| ^                  | starts matching at the beginning of the url             |\r\n| http://            | matches \"http://\"                                       |\r\n| (.*)\\.             | matches zero or more characters until the next dot and captures it as group $1 |\r\n| m\\.wikipedia\\.org/ | matches \"m.wikipedia.org/\"                              |\r\n| (.*)               | matches the reset of the url and captures it in group 2 |\r\n\r\nIf the URL matches, group $1 will contain the \"en\" part of the domain, and group\r\n$2 will contain everything after the domain name. So the resulting redirect url\r\nin our example will become:\r\n\r\n    http://en.wikipedia.org/wiki/Regular_expression\r\n\r\nTo learn more about regular expressions, try the interactive tutorial at\r\n[RegexOne.com][1]. \r\n\r\n[1]: http://regexone.com/ \"RegexOne\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}